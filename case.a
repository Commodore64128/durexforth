CHAR_TO_LOWERCASE ; ( char -- char )
    jsr DUP
    jsr LITC
    !byte 'a' + $80
    jsr LITC
    !byte 'z' + $81
    jsr WITHIN
    jsr ZBRANCH
    !word +
    jsr LITC
    !byte $80
    jmp MINUS
+   jsr DUP
    jsr LITC
    !byte 'A'
    jsr LITC
    !byte 'Z' + 1
    jsr WITHIN
    jsr ZBRANCH
    !word +
    jsr LITC
    !byte 32
    jmp MINUS
+   rts

STRING_TO_LOWERCASE ; ( str -- str )
    jsr DUP ; str addr
    jsr DUP
    jsr FETCHBYTE ; str addr len
.loopstart
    jsr DUP
    jsr ZBRANCH
    !word .loopend
    jsr SWAP
    jsr ONEPLUS
    jsr DUP
    jsr FETCHBYTE
    jsr CHAR_TO_LOWERCASE
    jsr OVER
    jsr STOREBYTE
    jsr SWAP
    jsr ONEMINUS
    jmp .loopstart
.loopend
    inx
    inx
    rts
